/**
 * A sample API conforming to the draft standard OGC API - Features - Part 1: Core
 * This is a sample OpenAPI definition that conforms to the conformance classes \"Core\", \"GeoJSON\", \"HTML\" and \"OpenAPI 3.0\" of the draft standard \"OGC API - Features - Part 1: Core\".  This example is a generic OGC API Features definition that uses path parameters to describe all feature collections and all features. The generic OpenAPI definition does not provide any details on the collections or the feature content. This information is only available from accessing the feature collection resources.  There is [another example](ogcapi-features-1-example2.yaml) that specifies each collection explicitly.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@example.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { FeatureGeoJSON } from './featureGeoJSON';
import { Link } from './link';


export interface FeatureCollectionGeoJSON { 
    type: FeatureCollectionGeoJSON.TypeEnum;
    features: Array<FeatureGeoJSON>;
    links?: Array<Link>;
    /**
     * This property indicates the time and date when the response was generated.
     */
    timeStamp?: string;
    /**
     * The number of features of the feature type that match the selection parameters like `bbox`.
     */
    numberMatched?: number;
    /**
     * The number of features in the feature collection.  A server may omit this information in a response, if the information about the number of features is not known or difficult to compute.  If the value is provided, the value shall be identical to the number of items in the \"features\" array.
     */
    numberReturned?: number;
}
export namespace FeatureCollectionGeoJSON {
    export type TypeEnum = 'FeatureCollection';
    export const TypeEnum = {
        FeatureCollection: 'FeatureCollection' as TypeEnum
    };
}


